{"version":3,"sources":["webpack://alfakini.com/./node_modules/email-validator/index.js","webpack://alfakini.com/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://alfakini.com/./src/components/newsletter-card.js","webpack://alfakini.com/./src/components/essay-abstract-card.js","webpack://alfakini.com/./src/pages/index.js"],"names":["tester","exports","validate","email","length","test","parts","split","some","part","_assertThisInitialized","self","ReferenceError","SubscriptionForm","onSubmit","onChange","formStatus","isEmailInvalid","isEmailValid","validationClass","className","name","placeholder","type","value","disabled","class","role","aria-hidden","props","state","handleChange","bind","handleSubmit","event","this","setState","target","validator","preventDefault","fetch","URLSearchParams","method","then","response","json","data","console","log","render","id","href","React","key","fields","slug","datetime","frontmatter","date","title","category","Link","to","path","abstract","G","image","getImage","cover","alt","location","essays","allMarkdownRemark","edges","map","post","node"],"mappings":"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","file":"component---src-pages-index-js-f92ace38a41664ad3caf.js","sourcesContent":["\"use strict\";\n\nvar tester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/; // Thanks to:\n// http://fightingforalostcause.net/misc/2006/compare-email-regex.php\n// http://thedailywtf.com/Articles/Validating_Email_Addresses.aspx\n// http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses/201378#201378\n\nexports.validate = function (email) {\n  if (!email) return false;\n  if (email.length > 254) return false;\n  var valid = tester.test(email);\n  if (!valid) return false; // Further checking of some things regex can't handle\n\n  var parts = email.split(\"@\");\n  if (parts[0].length > 64) return false;\n  var domainParts = parts[1].split(\".\");\n  if (domainParts.some(function (part) {\n    return part.length > 63;\n  })) return false;\n  return true;\n};","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from \"react\"\nimport validator from \"email-validator\"\n\nconst SHEET_URL = \"https://script.google.com/macros/s/AKfycbxzL-lO0ueLup75k_hQFxXglnn_Smz8jl1pChh-heMtUm2rb7-l0D-ZYwiTCbqceg6u/exec?\"\n\nconst SubscriptionForm = ({ onSubmit, onChange, formStatus, email, isEmailValid }) => {\n  const isEmailInvalid = (!isEmailValid && email !== \"\") || (formStatus === \"SUBMITED\" && email === \"\")\n  const validationClass = isEmailInvalid ? \"is-invalid\" : email !== \"\" ? \"is-valid\" : \"\"\n\n  return (\n    <form className=\"row\" onSubmit={onSubmit}>\n      <div className=\"col-12 col-md-8 mb-3\">\n        <input\n          className={`form-control form-control-lg ${validationClass}`}\n          name=\"email\"\n          onChange={onChange}\n          placeholder=\"Your email address\"\n          type =\"text\"\n          value={email}\n        />\n      </div>\n      <div className=\"col mb-3\">\n        <button type=\"submit\" className=\"btn btn-primary btn-lg w-100\" disabled={isEmailInvalid}>\n          Subscribe\n          {!isEmailInvalid && formStatus === \"SUBMITED\"\n          ? <span class=\"spinner-border spinner-border-sm ms-3 align-middle\" role=\"status\" aria-hidden=\"true\"></span>\n          : <></>}\n        </button>\n      </div>\n    </form>\n  )\n}\n\nclass NewsletterCard extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      email: \"\",\n      formStatus: \"NOTSUBMITED\",\n      isEmailValid: false,\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(event) {\n    this.setState({\n      email: event.target.value,\n      formStatus: \"NOTSUBMITED\",\n      isEmailValid: validator.validate(event.target.value),\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n\n    this.setState({ formStatus: \"SUBMITED\" })\n\n    if (!this.state.isEmailValid) {\n      return null\n    }\n\n    fetch(SHEET_URL + new URLSearchParams({ email: this.state.email }), {\n      method: \"GET\"\n    }).then(response => (\n      response.json()\n    )).then(data => {\n      console.log(data)\n      if (data[\"result\"] === \"success\") {\n        this.setState({ formStatus: \"SUCCESS\" })\n      }\n    })\n  }\n\n  render() {\n    const { email, isEmailValid, formStatus } = this.state\n\n    return (\n      <div id=\"newsletter\" className=\"card bg-light border-light rounded p-5\">\n        <div className=\"row p-3 px-5\">\n          <div className=\"col\">\n            <h2 className=\"card-title\">\n              <span>Newsletter</span>\n            </h2>\n            <div className=\"card-text\">\n              <p className=\"lead\">\n                Join the newsletter to receive the latest essays in your inbox. Alternatively, you can <a href=\"/rss.xml\">subscribe with RSS</a>.\n              </p>\n              {(isEmailValid && formStatus === \"SUCCESS\")\n                ? <span class=\"text-success\">\n                    Thank you for subscribing. See you on the next issue! :)\n                  </span>\n                : <SubscriptionForm\n                    email={email}\n                    formStatus={formStatus}\n                    isEmailValid={isEmailValid}\n                    onChange={this.handleChange}\n                    onSubmit={this.handleSubmit}\n                  />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NewsletterCard\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nconst EssayAbstractCard = ({ data }) => (\n  <article className=\"post-card card border-0\" key={data.fields.slug}>\n    <div className=\"card-body\">\n      <div className=\"row gx-4 gy-3\">\n        <div className=\"col-sm-3 col-md-3\">\n          <div className=\"row gy-1 card-text\">\n            <div className=\"col-6 col-sm-12\">\n              <time\n                className=\"post-date float-start text-muted\"\n                datetime={data.frontmatter.date}\n                title={data.frontmatter.date}>\n                {data.frontmatter.date}\n              </time>\n            </div>\n            <div className=\"col-6 col-sm-12\">\n              <span className=\"post-category float-end float-sm-start text-uppercase text-muted\">\n                {data.frontmatter.category}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-sm-6 col-md-6\">\n          <h2 className=\"post-title card-title h6\">\n            <Link className=\"stretched-link\" to={data.fields.path}>\n              {data.frontmatter.title}\n            </Link>\n          </h2>\n          <p className=\"card-text line-clamp-sm-3\">\n            {data.frontmatter.abstract}\n          </p>\n        </div>\n        <div className=\"col-sm-3 col-md-3\">\n          <GatsbyImage\n            image={getImage(data.fields.cover)}\n            alt={data.frontmatter.title}\n            className=\"img-fluid float-end\"\n          />\n        </div>\n      </div>\n    </div>\n  </article>\n)\n\nexport default EssayAbstractCard\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport EssayAbstractCard from \"../components/essay-abstract-card\"\nimport NewsletterCard from \"../components/newsletter-card\"\n\nconst IndexPage = ({ location, data }) => {\n  const essays = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title=\"Essays\">\n      <div className=\"row align-items-center justify-content-center\">\n        <div className=\"col-sm-10 col-md-10 col-lg-8\">\n          <h2>Essays</h2>\n\n          <hr className=\"mt-5\" />\n\n          {essays.map(post =>  {\n            return (\n              <>\n                <EssayAbstractCard data={post.node} />\n                <hr />\n              </>\n            )\n          })}\n\n          <NewsletterCard />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n            type\n            path\n            cover {\n              childImageSharp {\n                gatsbyImageData(\n                  width: 800\n                  placeholder: BLURRED\n                )\n              }\n            }\n          }\n          frontmatter {\n            abstract\n            category\n\n            date(formatString: \"DD MMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}